buildscript {
    ext.kotlin_version = '1.0.1-2'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

ext {
    guava = "18.+"
    spring = "4.1.+"
    commonsio = "2.4"
    slf4j = "1.7.+"
    servlets = "3.1.+"
    gson = "2.+"
    junit = "4.+"
    springSecurity = "4.0.+"
    postgresql = "9.4-1201-jdbc4"
    h2 = "1.4.+"
    springData="1.7.0.RELEASE"
    hibernate="4.3.6.Final"

    findbugsVersion = "3.0.+"
    jsr305 = "2.0.+"

}

subprojects {
    repositories {
        jcenter()
    }

    apply plugin: 'kotlin'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


        compile "com.google.guava:guava:$guava"
        compile "org.apache.commons:commons-lang3:3.4"
        compile "commons-io:commons-io:$commonsio"
        compile "com.google.code.gson:gson:$gson"

        compile "com.google.code.findbugs:jsr305:$jsr305"
        compile "org.jetbrains:annotations:13.0"

        testCompile "junit:junit:$junit"
        testCompile "org.springframework:spring-test:$spring"

        if (!project.name.equals("heap-logging") && !project.name.equals("heap-utils")) {
            compile "org.slf4j:slf4j-api:$slf4j"
            runtime project(":heap-logging")
        }

        ///

        // Web
        //compile "org.springframework:spring-core:$spring"

        //compile "org.springframework:spring-webmvc:$spring"
        //providedCompile "javax.servlet:javax.servlet-api:$servlets"

        // Service
        //compile "org.springframework:spring-context:$spring"

        //compile "org.springframework.security:spring-security-web:$springSecurity"
        //compile "org.springframework.security:spring-security-core:$springSecurity"
        //compile "org.springframework.security:spring-security-config:$springSecurity"

        // Dao
        //compile "org.springframework.data:spring-data-jpa:$springData"
        //compile "org.hibernate:hibernate-entitymanager:$hibernate"
        //compile "org.postgresql:postgresql:$postgresql"

        //testCompile "com.h2database:h2:$h2"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.12"
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}